# # import numpy as np
# # import matplotlib.pyplot as plt

# # # Data
# # x_values = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
# # y_arrays = [
# #     np.array([1, 1, 1, 1, 1, 1]),
# #     np.array([1.01944444, 1.01944444, 1.01944444, 0.93333333, 1.01944444, 1.01944444]),
# #     np.array([1.01944444, 1.01944444, 1.01944444, 0.93333333, 1.01944444, 1.01944444]),
# #     np.array([0.94989712, 1.03600823, 0.99063786, 0.9654321 , 1.03600823, 1.03600823]),
# #     np.array([0.99707933, 1.05001143, 0.98699703, 0.95198903, 1.05001143, 0.96390032]),
# #     np.array([0.99594352, 1.06946032, 0.98194032, 0.93331809, 1.06946032, 1.01652822]),
# #     np.array([0.994366  , 1.09647267, 0.97491711, 0.90738624, 1.01036156, 1.02295586]),
# #     np.array([0.994366  , 1.09647267, 0.97491711, 0.90738624, 1.01036156, 1.02295586]),
# #     np.array([0.9497004 , 1.09341646, 1.02849876, 0.86676464, 1.0682107 , 1.0026446 ]),
# #     np.array([0.92751599, 1.12712163, 0.94806926, 0.90013607, 1.09211363, 1.00104961]),
# #     np.array([1.01154199, 1.14046957, 0.96992358, 0.83194482, 1.09184735, 0.96536954]),
# #     np.array([0.95425674, 1.15697681, 0.96813835, 0.80318506, 1.08944594, 1.06208478]),
# #     np.array([0.93955963, 1.16507914, 0.96951321, 0.77747235, 1.07128627, 1.00963068]),
# #     np.array([0.9221976 , 1.23891067, 0.98500422, 0.79190732, 1.07196584, 0.98834798]),
# #     np.array([0.89270126, 1.22991533, 0.98255673, 0.72347789, 1.17474504, 0.98071942]),
# #     np.array([0.89270126, 1.22991533, 0.98255673, 0.72347789, 1.17474504, 0.98071942]),
# #     np.array([0.89270126, 1.22991533, 0.98255673, 0.72347789, 1.17474504, 0.98071942]),
# #     np.array([0.82846111, 1.32607481, 0.96191508, 0.63894442, 1.13173729, 1.06229682]),
# #     np.array([0.82846111, 1.32607481, 0.96191508, 0.63894442, 1.13173729, 1.06229682]),
# #     np.array([0.82846111, 1.32607481, 0.96191508, 0.63894442, 1.13173729, 1.06229682])
# # ]

# # # Plot each column
# # plt.plot(x_values, y_arrays)

# # plt.xlabel('X')
# # plt.ylabel('Y')
# # plt.title('Plot for Each Column')
# # plt.legend()
# # plt.grid(True)
# # # plt.show()

# # objectives = [2.075523022385097, 2.076084304138317, 2.0095556464560667, 1.9733351481247468, 1.913716607645699, 1.8572394494985667, 1.813456996178314, 1.7560810674782246, 1.6893797073165662, 1.645776963278815, 1.6039692676156698, 1.574891242199291, 1.4471331615911847, 1.4602132120261408, 1.45479873385231, 1.45479873385231, 1.346810196900904]


# # plt.plot(objectives)
# # plt.show()

# import numpy as np

# data = {
#     "0": {
#         "history": {
#             "design_vector": {
#                 "0": [1, 1],
#                 "1": [1.05, 0.95]
#             },
#             "objective_function": {
#                 "0": 0.1,
#                 "1": 0.1
#             }
#         }
#     },
#     "1": {
#         "history": {
#             "design_vector": {
#                 "0": [1.1, 1.1],
#                 "1": [2.2, 2.2]
#             },
#             "objective_function": {
#                 "0": 0.2,
#                 "1": 0.2
#             }
#         }
#     },
#     "2": {
#         "history": {
#             "design_vector": {
#                 "0": [10, 10],
#                 "1": [22, 22]
#             },
#             "objective_function": {
#                 "0": 0.2,
#                 "1": 0.2
#             }
#         }
#     }
# }


# stripped_dict = {key: value["history"] for key, value in data.items()}

# print(stripped_dict)


# # Extract the design_vector subkey for each main key
# names = ["design_vector", "objective_function"]
# results = []
# for name in names:
#     results.append({key: value[name] for key, value in stripped_dict.items()})

# total_transformed_data = {}
# for i, data in enumerate(results):
#     transformed_data = {}

#     for key in data['0']:
#         values = []
#         for subkey in data:
#             values.append(data[subkey][key])

#         transformed_data[key] = values
#     total_transformed_data[names[i]] = transformed_data

# stats = {}
# mean_values = {}
# std_dev_values = {}
# for key, value in total_transformed_data.items():

#     mean_list = []
#     std_dev_list = []
#     for subkey, subvalue in value.items():

#         subvalue_array = np.array(subvalue)

#         # Compute the mean and standard deviation
#         mean_value = np.mean(subvalue_array, axis=0)
#         std_dev_value = np.std(subvalue_array, axis=0)
#         if isinstance(mean_value, np.ndarray):
#             mean_value = list(mean_value)
#         if isinstance(std_dev_value, np.ndarray):
#             std_dev_value = list(std_dev_value)

#         mean_list.append(mean_value)
#         std_dev_list.append(std_dev_value)

#     mean_values[key] = mean_list
#     std_dev_values[key] = std_dev_list

# stats["mean"] = mean_values
# stats["std_dev"] = std_dev_values

# formatted_result_dict = {
#     'design_vector': {
#         'mean': stats['mean']['design_vector'],
#         'std_dev': stats['std_dev']['design_vector']
#     },
#     'objective_function': {
#         'mean': stats['mean']['objective_function'],
#         'std_dev': stats['std_dev']['objective_function']
#     }
# }

# # Print the mean and standard deviation values
# print("Mean Values:")
# print(mean_values)
# print("\nStandard Deviation Values:")
# print(std_dev_values)

# print(stats)
# print(formatted_result_dict)

import numpy as np
import matplotlib.pyplot as plt

data = {
   "threshold": 60393,
   "skm_to_od_duration": 3,
   "duration": 28,
   "factor": 1,
   "maxiter": 40,
   "initial_design_vector": [
      1.0,
      1.0,
      1.0,
      1.0,
      1.0,
      1.0
   ],
   "model": {
      "dynamic": {
         "model_type": "HF",
         "model_name": "PM",
         "model_number": 0
      },
      "truth": {
         "model_type": "HF",
         "model_name": "PM",
         "model_number": 0
      }
   },
   "history": {
      "0": {
         "design_vector": [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0
         ],
         "objective_function": 2.3241863369676703
      },
      "1": {
         "design_vector": [
            1.0194444444444442,
            1.0194444444444442,
            1.0194444444444442,
            0.9333333333333331,
            1.0194444444444442,
            1.0194444444444442
         ],
         "objective_function": 2.074290675231519
      },
      "2": {
         "design_vector": [
            1.023148148148148,
            1.0231481481481484,
            1.023148148148148,
            0.9777777777777779,
            1.023148148148148,
            0.9564814814814813
         ],
         "objective_function": 2.0820606600985365
      },
      "3": {
         "design_vector": [
            0.9498971193415633,
            1.0360082304526748,
            1.0360082304526743,
            0.9654320987654319,
            1.0360082304526743,
            0.9906378600823043
         ],
         "objective_function": 2.0149970523019274
      },
      "4": {
         "design_vector": [
            0.9970793324188378,
            1.0500114311842703,
            0.9639003200731588,
            0.9519890260630997,
            1.0500114311842699,
            0.986997027892089
         ],
         "objective_function": 1.9772778222661045
      },
      "5": {
         "design_vector": [
            0.9959435172483857,
            1.0694603210892641,
            1.0165282223238317,
            0.9333180917543051,
            1.0694603210892641,
            0.9819403165167901
         ],
         "objective_function": 1.9497249979600726
      },
      "6": {
         "design_vector": [
            0.9943659961783136,
            1.096472668179534,
            1.0229558643386552,
            0.9073862385476461,
            1.0103615570684221,
            0.9749171062733197
         ],
         "objective_function": 1.8607830120151558
      },
      "7": {
         "design_vector": [
            0.9943659961783136,
            1.096472668179534,
            1.0229558643386552,
            0.9073862385476461,
            1.0103615570684221,
            0.9749171062733197
         ],
         "objective_function": 1.8579697325224966
      },
      "8": {
         "design_vector": [
            0.9943659961783136,
            1.096472668179534,
            1.0229558643386552,
            0.9073862385476461,
            1.0103615570684221,
            0.9749171062733197
         ],
         "objective_function": 1.86447966682777
      },
      "9": {
         "design_vector": [
            0.9285785913867837,
            1.1202000037354742,
            0.9991708584493553,
            0.8700894778954225,
            1.0865923219796445,
            0.9953714558188977
         ],
         "objective_function": 1.7375066124025191
      },
      "10": {
         "design_vector": [
            0.9285785913867837,
            1.1202000037354742,
            0.9991708584493553,
            0.8700894778954225,
            1.0865923219796445,
            0.9953714558188977
         ],
         "objective_function": 1.73824699211176
      },
      "11": {
         "design_vector": [
            0.964769183967962,
            1.1313787156207924,
            1.0540837760131962,
            0.8508311655143241,
            1.078033189024237,
            0.9509581320181524
         ],
         "objective_function": 1.7084797111219516
      },
      "12": {
         "design_vector": [
            0.9487752276221428,
            1.1430874521380376,
            1.013548753214836,
            0.8267878520745948,
            1.0601055218767286,
            0.939645303901202
         ],
         "objective_function": 1.656403583498358
      },
      "13": {
         "design_vector": [
            0.934997037451371,
            1.2083666570431744,
            0.9937897476892648,
            0.8604010733039849,
            1.0564370213921805,
            0.9435210230443656
         ],
         "objective_function": 1.6523989378683734
      },
      "14": {
         "design_vector": [
            0.960827047872516,
            1.2015399907786057,
            1.009708608733397,
            0.7591971607952692,
            1.0561301744594949,
            0.9949618222865011
         ],
         "objective_function": 1.589319540266606
      },
      "15": {
         "design_vector": [
            0.9088044097803534,
            1.231524486907015,
            0.9879650177376373,
            0.7475636480452801,
            1.1490622934596921,
            0.9485474573239991
         ],
         "objective_function": 1.4933240224665012
      },
      "16": {
         "design_vector": [
            0.9088044097803534,
            1.231524486907015,
            0.9879650177376373,
            0.7475636480452801,
            1.1490622934596921,
            0.9485474573239991
         ],
         "objective_function": 1.494170360359499
      },
      "17": {
         "design_vector": [
            0.9088044097803534,
            1.231524486907015,
            0.9879650177376373,
            0.7475636480452801,
            1.1490622934596921,
            0.9485474573239991
         ],
         "objective_function": 1.4912255330335022
      },
      "18": {
         "design_vector": [
            0.8769932625279155,
            1.317960094472847,
            0.9595802553680595,
            0.6940321880915423,
            1.0810093506620022,
            0.9538995769055107
         ],
         "objective_function": 1.4399619905465124
      },
      "19": {
         "design_vector": [
            0.8769932625279155,
            1.317960094472847,
            0.9595802553680595,
            0.6940321880915423,
            1.0810093506620022,
            0.9538995769055107
         ],
         "objective_function": 1.4298429827792967
      },
      "20": {
         "design_vector": [
            0.8680084680972855,
            1.3336848497611427,
            1.019698751693411,
            0.5657982616593269,
            1.1370056972424907,
            0.9794789505557191
         ],
         "objective_function": 1.3334680765325853
      },
      "21": {
         "design_vector": [
            0.8680084680972855,
            1.3336848497611427,
            1.019698751693411,
            0.5657982616593269,
            1.1370056972424907,
            0.9794789505557191
         ],
         "objective_function": 1.339585884040424
      },
      "22": {
         "design_vector": [
            0.8680084680972855,
            1.3336848497611427,
            1.019698751693411,
            0.5657982616593269,
            1.1370056972424907,
            0.9794789505557191
         ],
         "objective_function": 1.332536760728543
      },
      "23": {
         "design_vector": [
            0.842920456076119,
            1.4528410331875876,
            0.9185782919873711,
            0.5204998280356572,
            1.1986387813715538,
            0.9512259105530076
         ],
         "objective_function": 1.2622327854049138
      },
      "24": {
         "design_vector": [
            0.77091586344632,
            1.5,
            0.9635949079263231,
            0.5,
            1.1266221673257555,
            0.9770013654261533
         ],
         "objective_function": 1.2573477899725667
      },
      "25": {
         "design_vector": [
            0.7641457594797296,
            1.4498705195785782,
            0.9409232437235504,
            0.5,
            1.1929541993164614,
            0.9519067111190294
         ],
         "objective_function": 1.2159358383120678
      },
      "26": {
         "design_vector": [
            0.7641457594797296,
            1.4498705195785782,
            0.9409232437235504,
            0.5,
            1.1929541993164614,
            0.9519067111190294
         ],
         "objective_function": 1.219795565320389
      },
      "27": {
         "design_vector": [
            0.7641457594797296,
            1.4498705195785782,
            0.9409232437235504,
            0.5,
            1.1929541993164614,
            0.9519067111190294
         ],
         "objective_function": 1.2256882859360865
      },
      "28": {
         "design_vector": [
            0.7641457594797296,
            1.4498705195785782,
            0.9409232437235504,
            0.5,
            1.1929541993164614,
            0.9519067111190294
         ],
         "objective_function": 1.2162602504425242
      },
      "29": {
         "design_vector": [
            0.6661588459590311,
            1.5,
            0.8476663341417361,
            0.5,
            1.270353671871569,
            0.9613924952463919
         ],
         "objective_function": 1.1537217629238488
      },
      "30": {
         "design_vector": [
            0.6661588459590311,
            1.5,
            0.8476663341417361,
            0.5,
            1.270353671871569,
            0.9613924952463919
         ],
         "objective_function": 1.1555133278807108
      },
      "31": {
         "design_vector": [
            0.6661588459590311,
            1.5,
            0.8476663341417361,
            0.5,
            1.270353671871569,
            0.9613924952463919
         ],
         "objective_function": 1.1523375828413431
      },
      "32": {
         "design_vector": [
            0.6339397219464944,
            1.469106411725094,
            0.8921660816283261,
            0.5,
            1.285472972477907,
            1.0081771079781907
         ],
         "objective_function": 1.1336567888120028
      },
      "33": {
         "design_vector": [
            0.6339397219464944,
            1.469106411725094,
            0.8921660816283261,
            0.5,
            1.285472972477907,
            1.0081771079781907
         ],
         "objective_function": 1.128030397047746
      },
      "34": {
         "design_vector": [
            0.5708399398623175,
            1.4531819662043337,
            0.8109923859244019,
            0.5,
            1.2926229571302352,
            0.9725569794517985
         ],
         "objective_function": 1.07556206219803
      },
      "35": {
         "design_vector": [
            0.5154704088178568,
            1.5,
            0.8292627851785366,
            0.5,
            1.3679378254856318,
            0.9964895824972699
         ],
         "objective_function": 1.054986697845134
      },
      "36": {
         "design_vector": [
            0.5226637086755639,
            1.484906616752807,
            0.846492565685435,
            0.5,
            1.2641019501255275,
            0.9791617213250403
         ],
         "objective_function": 1.0603991374028314
      },
      "37": {
         "design_vector": [
            0.5226637086755639,
            1.484906616752807,
            0.846492565685435,
            0.5,
            1.2641019501255275,
            0.9791617213250403
         ],
         "objective_function": 1.0625159695981816
      },
      "38": {
         "design_vector": [
            0.5226637086755639,
            1.484906616752807,
            0.846492565685435,
            0.5,
            1.2641019501255275,
            0.9791617213250403
         ],
         "objective_function": 1.0674596255916429
      },
      "39": {
         "design_vector": [
            0.5226637086755639,
            1.484906616752807,
            0.846492565685435,
            0.5,
            1.2641019501255275,
            0.9791617213250403
         ],
         "objective_function": 1.0576078011664123
      }
   },
   "final_result": {
      "x_optim": [
         0.5226637086755639,
         1.484906616752807,
         0.846492565685435,
         0.5,
         1.2641019501255275,
         0.9791617213250403
      ],
      "x_observation_windows": [
         [
            60390,
            60393
         ],
         [
            60396.0,
            60396.522663708674
         ],
         [
            60399.522663708674,
            60401.007570325426
         ],
         [
            60404.007570325426,
            60404.854062891114
         ],
         [
            60407.854062891114,
            60408.354062891114
         ],
         [
            60411.354062891114,
            60412.61816484124
         ],
         [
            60415.61816484124,
            60416.597326562565
         ]
      ],
      "x_skm_epochs": [
         60393,
         60396.522663708674,
         60401.007570325426,
         60404.854062891114,
         60408.354062891114,
         60412.61816484124,
         60416.597326562565
      ],
      "reduction_percentage": -54.49556757371457
   }
}


# Extract objective function values
iteration_numbers = []
objective_functions = []
states = []

for iteration, values in data["history"].items():
    iteration_numbers.append(int(iteration))
    objective_functions.append(values["objective_function"])
    states.append(values["design_vector"])

# Plot
plt.plot(iteration_numbers, objective_functions, marker='*', linestyle='-')
plt.xlabel('Iteration')
plt.ylabel(r'||$\Delta V$||')
plt.title('Objective Function Value vs. Iteration')
plt.grid(True)
plt.show()

plt.plot(iteration_numbers, states, marker='*', linestyle='-', label=["T1", "T2", "T3", "T4", "T5", "T6"])
plt.xlabel('Iteration')
plt.ylabel('States')
plt.title('State Evolution vs. Iteration')
plt.grid(True)
plt.show()